# -*- coding: utf-8 -*-
"""cif-file(1-relaxed_atoms).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1C3Xuhwp7tqDXTVOq4O40TSXwsDXY7vXB
"""

import os
from pymatgen.core import Lattice, Structure
from pymatgen.io.cif import CifWriter

def save_inequivalent_cif(inequivalents, cell, output_dir, filename="symmetrized_n_inequiv.cif"):
    """Save CIF containing only symmetry-inequivalent atoms."""
    lattice = Lattice(cell)
    species = [site.specie for site in inequivalents]
    frac_coords = [site.frac_coords for site in inequivalents]

    struct = Structure(lattice, species, frac_coords)
    filepath = os.path.join(output_dir, filename)
    CifWriter(struct).write_file(filepath)
    print(f" Symmetry-inequivalent CIF written to: {filepath}")

def main():
    xml_path = "aiida.xml"  # Use Colab current folder
    output_dir = os.path.dirname(xml_path) or "."

    symbols, positions, cell = parse_aiida_xml(xml_path)
    inequivalents, sga, _ = get_symmetry_inequivalent(symbols, positions, cell)

    print(f"Space group: {sga.get_space_group_symbol()} ({sga.get_space_group_number()})\n")
    for i, site in enumerate(inequivalents):
        frac = site.frac_coords
        print(f"{i+1:2d}  {site.specie}  {frac[0]:.8f}  {frac[1]:.8f}  {frac[2]:.8f}")

    save_inequivalent_cif(inequivalents, cell, output_dir, filename="AAA1.cif")

if __name__ == "__main__":
    main()





pip install ase spglib pymatgen